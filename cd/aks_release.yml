name: aks_release

resources:
  pipelines:
    - pipeline: customer_api
      source: customer_api_CI_
      project: AzureFastTrackCustomerExamples
      branch: master
      trigger:
        branches:
          include:
          - master

variables:
  serviceConnection: 'Azure CXP FTA Internal Subscription CBELLEE (b2375b5f-8dab-4436-b87c-32bc7fdce5d0)'
  location: australiaeast
  project: goshop
  acrResourceGroupName: $(project)-acr-rg
  containerName: 'templates'
  timeStamp: $[format('{0:yyyy}-{0:MM}-{0:dd}-{0:HHmmss}', pipeline.startTime)]
  aksVersion: 1.14.7
  aksNodeCount: 1
  maxPods: 50
  aksMinNodeCount: 1
  aksMaxNodeCount: 5
  aksNodeVMSize: Standard_F2s_v2
  armTemplatePath: ./infra/templates
  aksServicePrincipalAppId: de3ef06a-2824-4dce-b714-65ba1b5e0744
  aksServicePrincipalObjectId: d37981d6-bc89-4019-8c51-96a111f0bf62

stages:
- stage: 'dev'
  displayName: 'dev release'
  variables:
    environmentName: dev
    resourceGroupName: $(project)-$(environmentName)-aks-rg
    tags: '{"costCentre":"478132","project":"$(projectName)"}'
  jobs:
    - deployment: 
      pool:
        vmImage: 'ubuntu-latest'
      environment: $(environmentName)
      strategy:
       runOnce:
        deploy:
          steps:
          - checkout: self
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                $now = Get-Date
                $sasTokenExpiry = $now.AddHours(2).ToString('u') -replace ' ','T'
                Write-Host "##vso[task.setvariable variable=sasTokenExpiry;]$sasTokenExpiry"
          - task: AzureResourceGroupDeployment@2
            name: 'DeployStorage'
            displayName: 'Deploy storage account for arm templates'
            enabled: true
            inputs:
              action: Create Or Update Resource Group
              azureSubscription: $(serviceConnection)
              resourceGroupName: $(resourceGroupName)
              csmFile: $(armTemplatePath)/nested/storage.json
              location: $(location)
              templateLocation: Linked artifact
              deploymentMode: Incremental
              deploymentName: "storageDeployment-$(timeStamp)"
              overrideParameters: -sasTokenExpiry $(sasTokenExpiry) -storageSku Standard_LRS -storageKind StorageV2 -tags $(tags) -containerName $(containerName)

          - task: ARM Outputs@5
            name: 'GetStorageDeploymentOutput'
            displayName: 'Get ARM Storage Deployment Output'
            enabled: true
            inputs:
              ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
              ConnectedServiceNameARM: $(serviceConnection)
              resourceGroupName: $(resourceGroupName)
              whenLastDeploymentIsFailed: 'fail'
              deploymentNameFilter: "storageDeployment-$(timeStamp)"

          - task: AzureCLI@1
            displayName: 'Copy ARM template files to Azure blob storage'
            enabled: true
            inputs:
              azureSubscription: $(serviceConnection)
              scriptLocation: 'inlineScript'
              inlineScript: 'az storage blob upload-batch -d $(containerName) -s $(armTemplatePath)/nested/ --pattern *.json --account-name $(storageAccountName)'
      
          - task: AzureResourceGroupDeployment@2
            name: 'deployResources'
            displayName: 'Deploy resources'
            enabled: true
            inputs:
              action: Create Or Update Resource Group
              azureSubscription: $(serviceConnection)
              resourceGroupName: $(resourceGroupName)
              csmFile: $(armTemplatePath)/azuredeploy.json
              csmParametersFile: $(armTemplatePath)/azuredeploy.parameters.json
              location: $(location)
              templateLocation: Linked artifact
              deploymentMode: Incremental
              deploymentName: "resourceDeployment-$(timeStamp)"
              overrideParameters: 
                -aksMinNodeCount $(aksMinNodeCount)
                -aksMaxNodeCount $(aksMaxNodeCount)
                -storageUri $(storageContainerUri)
                -sasToken $(storageAccountSasToken)
                -aksVersion $(aksVersion)
                -aksNodeCount 1
                -aksNodeVMSize $(aksNodeVMSize)
                -aksMinNodeCount 1
                -aksMaxNodeCount 5
                -maxPods 50
                -outboundIpCount 2
                -aksServicePrincipalObjectId $(aksServicePrincipalObjectId)
                -aksServicePrincipalAppId $(aksServicePrincipalAppId)
                -aksServicePrincipalSecret $(aksServicePrincipalSecret)
          - task: ARM Outputs@5
            name: 'GetResourceDeploymentOutput'
            displayName: 'Get ARM Resource Deployment Output'
            enabled: true
            inputs:
              ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
              ConnectedServiceNameARM: $(serviceConnection)
              resourceGroupName: $(resourceGroupName)
              whenLastDeploymentIsFailed: 'fail'
              deploymentNameFilter: "resourceDeployment-$(timeStamp)"

          - task: HelmInstaller@1
            displayName: 'Install Helm'
            enabled: false
          - task: AzureCLI@1
            displayName: 'Install Istio'
            enabled: false
            inputs:
              azureSubscription: $(serviceConnection)
              scriptLocation: scriptPath
              scriptPath: ./scripts/install-istio.sh
              arguments: -r $(resourceGroupName) -n $(aksName)
          - task: AzureCLI@1
            displayName: 'Install Voting App'
            enabled: false
            inputs:
              azureSubscription: $(serviceConnection)
              scriptLocation: scriptPath
              scriptPath: ./scripts/install-apps.sh
- stage: 'test'
  displayName: 'test release'
  variables:
    environmentName: tst
    resourceGroupName: $(project)-$(environmentName)-aks-rg
    tags: '{"costCentre":"478132","project":"$(projectName)"}'
  jobs:
    - deployment: 
      pool:
        vmImage: 'ubuntu-latest'
      environment: test-$(environmentName)-environment
      strategy:
       runOnce:
        deploy:
          steps:
          - checkout: self
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                $now = Get-Date
                $sasTokenExpiry = $now.AddHours(2).ToString('u') -replace ' ','T'
                Write-Host "##vso[task.setvariable variable=sasTokenExpiry;]$sasTokenExpiry"
          - task: AzureResourceGroupDeployment@2
            name: 'DeployStorage'
            displayName: 'Deploy storage account for arm templates'
            enabled: true
            inputs:
              action: Create Or Update Resource Group
              azureSubscription: $(serviceConnection)
              resourceGroupName: $(resourceGroupName)
              csmFile: $(armTemplatePath)/nested/storage.json
              location: $(location)
              templateLocation: Linked artifact
              deploymentMode: Incremental
              deploymentName: "storageDeployment-$(timeStamp)"
              overrideParameters: -sasTokenExpiry $(sasTokenExpiry) -storageSku Standard_LRS -storageKind StorageV2 -tags $(tags) -containerName $(containerName)
          - task: ARM Outputs@5
            name: 'GetStorageDeploymentOutput'
            displayName: 'Get ARM Storage Deployment Output'
            enabled: true
            inputs:
              ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
              ConnectedServiceNameARM: $(serviceConnection)
              resourceGroupName: $(resourceGroupName)
              whenLastDeploymentIsFailed: 'fail'
              deploymentNameFilter: "storageDeployment-$(timeStamp)"
          - task: AzureCLI@1
            displayName: 'Copy ARM template files to Azure blob storage'
            enabled: true
            inputs:
              azureSubscription: $(serviceConnection)
              scriptLocation: 'inlineScript'
              inlineScript: 'az storage blob upload-batch -d $(containerName) -s $(armTemplatePath)/nested/ --pattern *.json --account-name $(storageAccountName)'
          - task: AzureResourceGroupDeployment@2
            name: 'deployResources'
            displayName: 'Deploy resources'
            enabled: true
            inputs:
              action: Create Or Update Resource Group
              azureSubscription: $(serviceConnection)
              resourceGroupName: $(resourceGroupName)
              csmFile: $(armTemplatePath)/azuredeploy.json
              csmParametersFile: $(armTemplatePath)/azuredeploy.parameters.json
              location: $(location)
              templateLocation: Linked artifact
              deploymentMode: Incremental
              deploymentName: "resourceDeployment-$(timeStamp)"
              overrideParameters: 
                -aksMinNodeCount $(aksMinNodeCount)
                -aksMaxNodeCount $(aksMaxNodeCount)
                -storageUri $(storageContainerUri)
                -sasToken $(storageAccountSasToken)
                -aksVersion $(aksVersion)
                -aksNodeCount 1
                -aksNodeVMSize $(aksNodeVMSize)
                -maxPods 50
                -outboundIpCount 2
                -aksServicePrincipalObjectId $(aksServicePrincipalObjectId)
                -aksServicePrincipalAppId $(aksServicePrincipalAppId)
                -aksServicePrincipalSecret $(aksServicePrincipalSecret)
          - task: ARM Outputs@5
            name: 'GetResourceDeploymentOutput'
            displayName: 'Get ARM Resource Deployment Output'
            enabled: true
            inputs:
              ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
              ConnectedServiceNameARM: $(serviceConnection)
              resourceGroupName: $(resourceGroupName)
              whenLastDeploymentIsFailed: 'fail'
              deploymentNameFilter: "resourceDeployment-$(timeStamp)"
          - task: HelmInstaller@1
            displayName: 'Install Helm'
            enabled: false
          - task: AzureCLI@1
            displayName: 'Install Istio'
            enabled: false
            inputs:
              azureSubscription: $(serviceConnection)
              scriptLocation: scriptPath
              scriptPath: ./scripts/install-istio.sh
              arguments: -r $(resourceGroupName) -n $(aksName)
          - task: AzureCLI@1
            displayName: 'Install Voting App'
            enabled: false
            inputs:
              azureSubscription: $(serviceConnection)
              scriptLocation: scriptPath
              scriptPath: ./scripts/install-apps.sh